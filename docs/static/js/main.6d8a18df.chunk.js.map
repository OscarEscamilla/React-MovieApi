{"version":3,"sources":["components/card/Card.js","containers/ListMovies.js","index.js"],"names":["Card","movie","className","src","Poster","alt","Title","width","Year","ListMovies","useState","data","setData","error","seterror","searchTerm","setTerm","constructorHasRun","setConstructorHasRun","a","fetch","response","ok","json","res","Search","constructor","handlerSearchOnChange","e","target","value","handlerSubmit","preventDefault","clasName","onSubmit","id","type","placeholder","onChange","autoFocus","map","i","key","App","ReactDOM","render","document","getElementById"],"mappings":"8KAiCeA,EA7BF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAGZ,OACI,yBAAKC,UAAU,YACX,yBAAKA,UAAU,aACX,yBAAKC,IAAKF,EAAMG,OAAQC,IAAKJ,EAAMK,MAAOC,MAAM,MAAML,UAAU,iBAChE,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAcD,EAAMK,OAClC,uBAAGJ,UAAU,aAAb,QAA+BD,EAAMO,UCsE1CC,EA7EI,WAAO,IAAD,EAEGC,mBAAS,IAFZ,mBAEdC,EAFc,KAERC,EAFQ,OAGKF,mBAAS,IAHd,mBAGdG,EAHc,KAGPC,EAHO,OAISJ,mBAAS,IAJlB,mBAIdK,EAJc,KAIFC,EAJE,OAK6BN,oBAAS,GALtC,mBAKdO,EALc,KAKKC,EALL,MAUJ,uCAAG,8BAAAC,EAAA,0DACZF,EADY,iEAGOG,MAAM,8DAHb,YAGVC,EAHU,QAIJC,GAJI,iCAKMD,EAASE,OALf,OAKNC,EALM,OAMZZ,EAAQY,EAAIC,QANA,QAShBP,GAAqB,GATL,4CAAH,qDAYjBQ,GAIA,IAAMC,EAAqB,uCAAG,WAAOC,GAAP,SAAAT,EAAA,sDAC1BH,EAAQY,EAAEC,OAAOC,OACjBhB,EAAS,IAFiB,2CAAH,sDAOrBiB,EAAa,uCAAG,WAAOH,GAAP,iBAAAT,EAAA,yDAClBS,EAAEI,iBACEjB,EAFc,gBAGdD,EAAS,+BAHK,uCAKSM,MAAM,wDAAD,OAAyDL,IALvE,YAKRM,EALQ,QAMFC,GANE,kCAOQD,EAASE,OAPjB,SAOJC,EAPI,QAQNC,OAASb,EAAQY,EAAIC,QAASX,EAAS,qBARjC,4CAAH,sDAenB,OACI,oCACI,yBAAKmB,SAAS,OACV,yBAAK/B,UAAU,4BACX,0BAAMA,UAAU,cAAcgC,SAAW,SAAAN,GAAC,OAAIG,EAAcH,KACxD,2BACIO,GAAG,eACHC,KAAK,OACLC,YAAY,SACZnC,UAAU,eACVoC,SAAUX,EACVY,WAAS,KAGjB,uBAAGrC,UAAU,mBAAoBW,GAAgB,MAGzD,yBAAKX,UAAU,OAAf,IAEIS,EAAK6B,KAAI,SAACvC,EAAOwC,GAAR,OAAe,kBAAC,EAAD,CAAMxC,MAAOA,EAAOyC,IAAKD,UCjE3DE,G,MAAM,WAEV,OACE,0BAAMzC,UAAU,WACd,yBAAKA,UAAU,aACb,kBAAC,EAAD,UAMR0C,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6d8a18df.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Card = ({ movie }) => {\r\n\r\n\r\n    return (\r\n        <div className=\"col-md-4\">\r\n            <div className=\"card mb-4\">\r\n                <img src={movie.Poster} alt={movie.Title} width=\"100\" className=\"card-img-top\"></img>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{movie.Title}</h5>\r\n                    <p className=\"card-text\">Year {movie.Year}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\nCard.propTypes = {\r\n    movie: PropTypes.shape(\r\n        {\r\n            Title: PropTypes.string,\r\n            Year: PropTypes.string,\r\n            Poster: PropTypes.string\r\n\r\n        }).isRequired\r\n}\r\n\r\nexport default Card;","\r\nimport React, {useState} from 'react';\r\nimport Card from '../components/card/Card';\r\n\r\n\r\n\r\nconst ListMovies = () => {\r\n\r\n    const [data, setData] = useState([])\r\n    const [error, seterror] = useState('')\r\n    const [searchTerm, setTerm] = useState('')\r\n    const [constructorHasRun, setConstructorHasRun] = useState(false);\r\n\r\n   \r\n\r\n\r\n    const constructor = async () => {\r\n        if (constructorHasRun) return; // ejecuta solo la primera vez al pasar true y salir de la funcion en el return\r\n        \r\n        const response = await fetch(`http://www.omdbapi.com/?i=tt3896198&apikey=d3e128f&s=joker`);\r\n        if(response.ok){\r\n            const res = await response.json()\r\n            setData(res.Search)\r\n        }\r\n\r\n        setConstructorHasRun(true);\r\n      };\r\n    \r\n    constructor();\r\n\r\n    \r\n\r\n    const handlerSearchOnChange = async (e) => {\r\n        setTerm(e.target.value);\r\n        seterror(''); \r\n    }\r\n\r\n  \r\n\r\n    const handlerSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if(!searchTerm){\r\n            seterror('Enter a valid text, please!')\r\n        }else{\r\n            const response = await fetch(`http://www.omdbapi.com/?i=tt3896198&apikey=d3e128f&s=${searchTerm}`);\r\n            if(response.ok){\r\n                const res = await response.json()\r\n                res.Search ? setData(res.Search): seterror(\"Results not found\");\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // render\r\n    return (\r\n        <>\r\n            <div clasName=\"row\">\r\n                <div className=\"col-md-4 offset-md-4 p-4\">\r\n                    <form className=\"form-inline\" onSubmit= {e => handlerSubmit(e)}>\r\n                        <input\r\n                            id=\"input-search\"\r\n                            type=\"text\" \r\n                            placeholder=\"Search\" \r\n                            className=\"form-control\"\r\n                            onChange={handlerSearchOnChange}\r\n                            autoFocus>\r\n                        </input>\r\n                    </form>\r\n                    <p className=\"text-white mt-3\">{ error ? error : ''}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\"> { \r\n\r\n                data.map((movie, i) =>  <Card movie={movie} key={i} /> ) \r\n            \r\n            }</div>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ListMovies;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ListMovies from './containers/ListMovies';\r\nimport 'bootswatch/dist/lux/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <main className=\"bg-dark\">\r\n      <div className=\"container\">\r\n        <ListMovies></ListMovies>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <App></App>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}